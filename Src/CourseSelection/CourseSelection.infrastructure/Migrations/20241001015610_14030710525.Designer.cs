// <auto-generated />
using System;
using CourseSelection.infrastructure.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CourseSelection.infrastructure.Migrations
{
    [DbContext(typeof(CourseSelectionContext))]
    [Migration("20241001015610_14030710525")]
    partial class _14030710525
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseSelection.Domain.Course.Courses", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2(6)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("UnitsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("CourseSelection.Domain.ReserveUnits.ReserveUnits", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2(6)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2(6)");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("ReserveUnits");
                });

            modelBuilder.Entity("CourseSelection.Domain.SeletionTime.SelectionTime", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2(6)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2(6)");

                    b.Property<string>("TimeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SelectionTime");
                });

            modelBuilder.Entity("CourseSelection.Domain.Units.Units", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllCapacity")
                        .HasColumnType("int");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2(6)");

                    b.Property<DateTime>("ExamTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ReservedCapacity")
                        .HasColumnType("int");

                    b.Property<Guid>("SelectionTimeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Teacher")
                        .IsRequired()
                        .HasMaxLength(700)
                        .HasColumnType("nvarchar(700)");

                    b.HasKey("Id");

                    b.HasIndex("SelectionTimeId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("CourseSelection.Domain.ReserveUnits.ReserveUnits", b =>
                {
                    b.HasOne("CourseSelection.Domain.Units.Units", "Units")
                        .WithMany("ReserveUnits")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Units");
                });

            modelBuilder.Entity("CourseSelection.Domain.Units.Units", b =>
                {
                    b.HasOne("CourseSelection.Domain.Course.Courses", "Course")
                        .WithMany("Units")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseSelection.Domain.SeletionTime.SelectionTime", "SelectionTime")
                        .WithMany("Units")
                        .HasForeignKey("SelectionTimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("SelectionTime");
                });

            modelBuilder.Entity("CourseSelection.Domain.Course.Courses", b =>
                {
                    b.Navigation("Units");
                });

            modelBuilder.Entity("CourseSelection.Domain.SeletionTime.SelectionTime", b =>
                {
                    b.Navigation("Units");
                });

            modelBuilder.Entity("CourseSelection.Domain.Units.Units", b =>
                {
                    b.Navigation("ReserveUnits");
                });
#pragma warning restore 612, 618
        }
    }
}
